input {
	stdin {}
	jdbc {
		 # 多表同步时，表类型区分，建议命名为“库名_表名”，每个jdbc模块需对应一个type；
		 type => "baa-backend_baa_person"
		 jdbc_driver_library => "/usr/local/logstash/mysql/mysql-connector-java-8.0.29.jar"
         jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
         jdbc_connection_string => "jdbc:mysql://1.15.53.152:3306/baa-backend?useUnicode=true&characterEncoding=UTF-8"
         jdbc_user => "root"
         jdbc_password => "Llt619tlL.mysql"
         jdbc_paging_enabled => true
         jdbc_page_size => "50000"
         jdbc_default_timezone =>"Asia/Shanghai"

         use_column_value => true
         # 如果 use_column_value 为真,需配置此参数. track 的数据库 column 名,该 column 必须是递增的. 一般是mysql主键
         tracking_column => "unix_ts_in_secs"
         tracking_column_type => "numeric"

         # last_run_metadata_path => "./logstash_capital_bill_last_id"
         # 是否清除 last_run_metadata_path 的记录,如果为真那么每次都相当于从头开始查询所有的数据库记录
         clean_run => true
         # 是否将 字段(column) 名称转小写
         lowercase_column_names => false

         schedule => "*/5 * * * * *"
         statement => "SELECT *, UNIX_TIMESTAMP(modification_time) AS unix_ts_in_secs FROM baa_person WHERE (UNIX_TIMESTAMP(modification_time) > :sql_last_value AND modification_time < NOW()) ORDER BY modification_time ASC"
	}
}

output {
    # 打印信息，生产环境不需要
    stdout {
        codec => json_lines
    }
	# output模块的type需和jdbc模块的type一致
	if [type] == "baa-backend_baa_person" {
		elasticsearch {
			hosts => ["1.15.53.152:9200"]
			index => "es_baa_person"
			# 数据唯一索引（建议使用数据库KeyID）
			document_id => "%{id}"
		}
	}
}